//Изменить цвет текста
<h2 style="color: red;">CatPhotoApp</h2>

//Используйте селекторы CSS для стилизации элементов
<style>
  h2 {
    color: blue;
    }
    </style>
<h2>CatPhotoApp</h2>

//Используйте класс CSS для стилизации элемента
<style>
  .red-text {
    color: red;
  }
</style>
<h2 class="red-text">CatPhotoApp</h2>

//Стилизовать несколько элементов с помощью класса CSS

//Изменить размер шрифта элемента
<style>
  .red-text {
    color: red;
    }
    p {font-size: 16px;}
</style>

//Импортировать шрифт Google
<link href="https://fonts.googleapis.com/css?family=Lobster" rel="stylesheet" type="text/css">
<style>
  .red-text {
    color: red;
  }
  h2 {font-family: lobster;}
  p {
    font-size: 16px;
    font-family: monospace;
  }
</style>

//Укажите, как должны ухудшаться шрифты
<!--<link href="https://fonts.googleapis.com/css?family=Lobster" rel="stylesheet" type="text/css"> -->
<style>
  .red-text {
    color: red;
  }

  h2 {
    font-family: Lobster, monospace;
  }

  p {
    font-size: 16px;
    font-family: monospace;
  }
</style>

//Размер ваших изображений

<style>
  .larger-image { width: 300px; }
  </style>

//Добавьте границы вокруг ваших элементов

<style>
.thick-green-border {border-color: green;border-width: 10px; border-style: solid;}
</style>

//Добавьте закругленные углы с радиусом границы
border-radius: 10px
//Создание круглых изображений с радиусом границы
border-radius: 50%;

//Присвоить цвет фона элементу div
.silver-background {
  background-color: silver;
}

//Установить идентификатор элемента
<form id="cat-photo-form" action="https://freecatphotoapp.com/submit-cat-photo">

//Используйте атрибут id для стилизации элемента
#cat-photo-form {
  background: green;
}

//
Отрегулируйте отступ элемента
.red-box {
  background-color: crimson;
  color: #fff;
  padding: 20px;}

//Отрегулируйте поле элемента
  .blue-box {
  background-color: blue;
  color: #fff;
  padding: 20px;
  margin: 20px; 
  }
  //Добавить отрицательное поле к элементу
   .blue-box {
    background-color: blue;
    color: #fff;
    padding: 20px;
    margin: -15px;  
   }

   //Добавьте разные отступы к каждой стороне элемента
   .blue-box {
    background-color: blue;
    color: #fff;
    padding-top: 40px;
    padding-right: 20px;
    padding-bottom: 20px;
    padding-left: 40px;
  }
  //Добавьте разные поля к каждой стороне элемента
  blue-box {
    background-color: blue;
    color: #fff;
    margin-top: 40px;
    margin-right: 20px;
    margin-bottom: 20px;
    margin-left: 40px;
  }

  //Используйте нотацию по часовой стрелке, чтобы указать отступ элемента
  .blue-box {
    background-color: blue;
    color: #fff;
    padding: 40px 20px 20px 40px;
  }
  //Используйте нотацию по часовой стрелке для указания поля элемента
  .blue-box {
    background-color: blue;
    color: #fff;
    margin: 40px 20px 20px 40px;
  }
  Используйте селекторы атрибутов для стилизации элементов
  [type='checkbox'] {
    margin: 10px 0px 15px 0px;
  }
  //Понимание абсолютных и относительных единиц
  red-box {
    background-color: red;
    margin: 20px 40px 20px 40px;
    padding: 1.5em;
  }

  //Стиль элемента HTML Body
  <style>
 body {
   background-color: black;
 }
</style>

//<style>
body {
  background-color: black;
  color: green;
  font-family: monospace;
}

</style>

<h1>Hello World</h1>

//Отдайте предпочтение одному стилю перед другим
<style>
  body {
    background-color: black;
    font-family: monospace;
    color: green;
    }
    .pink-text {
      color: pink;
    }
</style>
<h1 class="pink-text">Hello World!</h1>

//Переопределить стили в последующем CSS
<style>
  body {
    background-color: black;
    font-family: monospace;
    color: green;
  }
  .pink-text {
    color: pink;
  }
  .blue-text {
    color: blue;
  }
</style>
<h1 class="pink-text blue-text">Hello World!</h1>

//Переопределить объявления классов, изменив атрибуты идентификатора стиля
<style>
  body {
    background-color: black;
    font-family: monospace;
    color: green;
  }

  #orange-text {
    color: orange;
  }
  .pink-text {
    color: pink;
  }
  .blue-text {
    color: blue;
  }
</style>
<h1 id="orange-text" class="pink-text blue-text">Hello World!</h1>

//Переопределить объявления классов с помощью встроенных стилей
<style>
body {
  background-color: black;
  font-family: monospace;
  color: green;
}
#orange-text {
  color: orange;
}
.pink-text {
  color: pink;
}
.blue-text {
  color: blue;
}
</style>
<h1 style="color: white;" id="orange-text" class="pink-text blue-text">Hello World!</h1>

//
<style>
body {
  background-color: black;
  font-family: monospace;
  color: green;
}
#orange-text {
  color: orange;
}
.pink-text {
  color: pink !important;
}
.blue-text {
  color: blue;
}
</style>
<h1 id="orange-text" class="pink-text blue-text" style="color: white">Hello World!</h1>
//Используйте шестнадцатеричный код для определенных цветов
<style>
  body {
    background-color: #000000;
  }
</style>

//Используйте шестнадцатеричный код для смешивания цветов
<style>
  .red-text {
    color: #ff0000;
  }
  .green-text {
    color: #00ff00;
  }
  .dodger-blue-text {
    color: #1e90ff;
  }
  .orange-text {
    color: #ffa500;
  }
</style>

<h1 class="red-text">I am red!</h1>

<h1 class="green-text">I am green!</h1>

<h1 class="dodger-blue-text">I am dodger blue!</h1>

<h1 class="orange-text">I am orange!</h1>

//Используйте сокращенный шестнадцатеричный код
<style>
  .red-text {
    color: #f00;
  }
  .fuchsia-text {
    color: #f0f;
  }
  .cyan-text {
    color: #0ff;
  }
  .green-text {
    color: #0f0;
  }
</style>

<h1 class="red-text">I am red!</h1>

<h1 class="fuchsia-text">I am fuchsia!</h1>

<h1 class="cyan-text">I am cyan!</h1>

<h1 class="green-text">I am green!</h1>

//Используйте значения RGB для окрашивания элементов

<style>
  body {
    background-color: rgb(0,0,0);
  }
</style>

//Используйте RGB для смешивания цветов
<style>
  .red-text {
    color: rgb(255,0,0);
  }
  .orchid-text {
    color: rgb(218,112,214);
  }
  .sienna-text {
    color: rgb(160,82,45);
  }
  .blue-text {
    color: rgb(0,0,255);
  }
</style>

<h1 class="red-text">I am red!</h1>

<h1 class="orchid-text">I am orchid!</h1>

<h1 class="sienna-text">I am sienna!</h1>

<h1 class="blue-text">I am blue!</h1>

//Используйте переменные CSS для одновременного изменения нескольких элементов
<style>
  .penguin {

    /* Only change code below this line */
    --penguin-skin: black;
    --penguin-belly: gray;
    --penguin-beak: yellow;
    /* Only change code above this line */

//Создайте пользовательскую переменную CSS
--penguin-skin: gray;

//<style>
.penguin {
  --penguin-skin: gray;
  position: relative;
  margin: auto;
  display: block;
  margin-top: 5%;
  width: 300px;
  height: 300px;
}

.penguin-top {
  top: 10%;
  left: 25%;

  /* Change code below this line */
  background: var(--penguin-skin);
  /* Change code above this line */

  width: 50%;
  height: 45%;
  border-radius: 70% 70% 60% 60%;
}
//Прикрепите резервное значение к переменной CSS
background: var(--penguin-skin, black);	

Улучшение совместимости с резервными версиями браузера
<style>
  :root {
    --red-color: red;
  }
  .red-box {
    background: red;
    background: var(--red-color);
    height: 200px;
    width:200px;
  }
</style>
<div class="red-box"></div>

//Наследовать переменные CSS
<style>
  :root {
    /* Only change code below this line */
    --penguin-belly: pink;
    /* Only change code above this line */
  }

  body {
    background: var(--penguin-belly, #c6faf1);
  }

  .penguin {
    --penguin-skin: gray;
    --penguin-beak: orange;
    position: relative;
    margin: auto;
    display: block;
    margin-top: 5%;
    width: 300px;
    height: 300px;
  }

  .right-cheek {
    top: 15%;
    left: 35%;
    background: var(--penguin-belly, white);
    width: 60%;
    height: 70%;
    border-radius: 70% 70% 60% 60%;
  }

  .left-cheek {
    top: 15%;
    left: 5%;
    background: var(--penguin-belly, white);
    width: 60%;
    height: 70%;
    border-radius: 70% 70% 60% 60%;
  }

  .belly {
    top: 60%;
    left: 2.5%;
    background: var(--penguin-belly, white);
    width: 95%;
    height: 100%;
    border-radius: 120% 120% 100% 100%;
  }

  .penguin-top {
    top: 10%;
    left: 25%;
    background: var(--penguin-skin, gray);
    width: 50%;
    height: 45%;
    border-radius: 70% 70% 60% 60%;
  }

  .penguin-bottom {
    top: 40%;
    left: 23.5%;
    background: var(--penguin-skin, gray);
    width: 53%;
    height: 45%;
    border-radius: 70% 70% 100% 100%;
  }

  .right-hand {
    top: 0%;
    left: -5%;
    background: var(--penguin-skin, gray);
    width: 30%;
    height: 60%;
    border-radius: 30% 30% 120% 30%;
    transform: rotate(45deg);
    z-index: -1;
  }

  .left-hand {
    top: 0%;
    left: 75%;
    background: var(--penguin-skin, gray);
    width: 30%;
    height: 60%;
    border-radius: 30% 30% 30% 120%;
    transform: rotate(-45deg);
    z-index: -1;
  }

  .right-feet {
    top: 85%;
    left: 60%;
    background: var(--penguin-beak, orange);
    width: 15%;
    height: 30%;
    border-radius: 50% 50% 50% 50%;
    transform: rotate(-80deg);
    z-index: -2222;
  }

  .left-feet {
    top: 85%;
    left: 25%;
    background: var(--penguin-beak, orange);
    width: 15%;
    height: 30%;
    border-radius: 50% 50% 50% 50%;
    transform: rotate(80deg);
    z-index: -2222;
  }

  .right-eye {
    top: 45%;
    left: 60%;
    background: black;
    width: 15%;
    height: 17%;
    border-radius: 50%;
  }

  .left-eye {
    top: 45%;
    left: 25%;
    background: black;
    width: 15%;
    height: 17%;
    border-radius: 50%;
  }

  .sparkle {
    top: 25%;
    left: 15%;
    background: white;
    width: 35%;
    height: 35%;
    border-radius: 50%;
  }

  .blush-right {
    top: 65%;
    left: 15%;
    background: pink;
    width: 15%;
    height: 10%;
    border-radius: 50%;
  }

  .blush-left {
    top: 65%;
    left: 70%;
    background: pink;
    width: 15%;
    height: 10%;
    border-radius: 50%;
  }

  .beak-top {
    top: 60%;
    left: 40%;
    background: var(--penguin-beak, orange);
    width: 20%;
    height: 10%;
    border-radius: 50%;
  }

  .beak-bottom {
    top: 65%;
    left: 42%;
    background: var(--penguin-beak, orange);
    width: 16%;
    height: 10%;
    border-radius: 50%;
  }

  .penguin * {
    position: absolute;
  }
</style>
<div class="penguin">
  <div class="penguin-bottom">
    <div class="right-hand"></div>
    <div class="left-hand"></div>
    <div class="right-feet"></div>
    <div class="left-feet"></div>
  </div>
  <div class="penguin-top">
    <div class="right-cheek"></div>
    <div class="left-cheek"></div>
    <div class="belly"></div>
    <div class="right-eye">
      <div class="sparkle"></div>
    </div>
    <div class="left-eye">
      <div class="sparkle"></div>
    </div>
    <div class="blush-right"></div>
    <div class="blush-left"></div>
    <div class="beak-top"></div>
    <div class="beak-bottom"></div>
  </div>
</div>

//Изменить переменную для определенной области
<style>
  :root {
    --penguin-skin: gray;
    --penguin-belly: pink;
    --penguin-beak: orange;
  }

  body {
    background: var(--penguin-belly, #c6faf1);
  }

  .penguin {
    /* Only change code below this line */
    --penguin-belly: white;
    /* Only change code above this line */

	//
	<style>
  :root {
    --penguin-size: 300px;
    --penguin-skin: gray;
    --penguin-belly: white;
    --penguin-beak: orange;
  }

  @media (max-width: 350px) {
    :root {
      --penguin-size: 200px;
      --penguin-skin: black;